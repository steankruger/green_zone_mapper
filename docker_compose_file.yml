version: '3.1'

services:

  geoserver:
    image: docker.osgeo.org/geoserver:2.24.x
    container_name: geoserver
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - geoserver:/opt/geoserver_data

  posgres_db:
    image: postgis/postgis
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: stean_kruger
      POSTGRES_DB: geoserver_db
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres:/var/lib/postgresql/data

  mapstore_postgres:
    build:
      context: ./docker/postgres/
    image: geosolutions-mapstore/postgis
    container_name: mapstore_postgres
    restart: on-failure
    healthcheck:
      test: /usr/bin/pg_isready -U postgres
      interval: 5s
      timeout: 10s
      retries: 120
    environment:
      POSTGRES_USER: stean_kruger
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mapstore_db
    volumes:
    - mapstore_pg_data:${PGDATA:-/var/lib/postgresql/data}:rw
    ports:
      - 5432

  mapstore:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        OVR: "geostore-datasource-ovr.properties"
        MAPSTORE_WEBAPP_SRC: "https://github.com/geosolutions-it/MapStore2/releases/latest/download/mapstore.war"
    container_name: mapstore
    command: [ "wait-for-postgres", "postgres", "5432", "postgres", "postgres", "catalina.sh", "run" ]
    depends_on:
      - mapstore_postgres
    ports:
      - 8080

  proxy:
    image: nginx
    container_name: proxy
    volumes:
      - /var/files/mapstore.conf:/etc/nginx/conf.d/default.conf:rw
    ports:
      - 80:80
    depends_on:
      - mapstore
 
volumes:
   postgres:
   geoserver:
   mapstore_pg_data:
